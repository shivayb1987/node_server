{"version":3,"sources":["../src/main.js"],"names":["Server","config","bind","setup","template","security","routes","app","use","port","listen","debug","json","urlencoded","extended","RedisStore","store","host","secret","resave","rolling","saveUninitialized","cookie","expires","engine","renderFile","set","initialize","session","configure","router","server","start"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AACA;;IAEMA,M;AACJ,oBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKI,MAAL,GAAc,KAAKA,MAAL,CAAYJ,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,KAAL;AACD;;;;4BAEO;AACN,WAAKI,GAAL,GAAW,wBAAX;AACA,WAAKA,GAAL,CAASC,GAAT;AACA,WAAKP,MAAL;AACD;;;0BAEKQ,I,EAAM;AACV,WAAKF,GAAL,CAASG,MAAT,CAAgBD,IAAhB,EAAsB,YAAM;AAC1B,yBAAOE,KAAP,CAAa,mBAAb,EAAkCF,IAAlC;AACD,OAFD;AAGD;;;6BAEQ;AACP,WAAKF,GAAL,CAASC,GAAT,CAAa,qBAAWI,IAAX,EAAb;AACA,WAAKL,GAAL,CAASC,GAAT,CAAa,6BAAb;AACA,WAAKD,GAAL,CAASC,GAAT,CAAa,qBAAWK,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAb;AACA,UAAMC,aAAa,qDAAnB;AACA,WAAKR,GAAL,CAASC,GAAT,CAAa,8BAAQ;AACnBQ,eAAO,IAAID,UAAJ,CAAe;AACpBE,gBAAM,WADc;AAEpBR,gBAAM;AAFc,SAAf,CADY;AAKnBS,gBAAQ,4BALW;AAMnBC,gBAAQ,KANW;AAOnBC,iBAAS,IAPU;AAQnBC,2BAAmB,KARA;AASnBC,gBAAQ,EAAEC,SAAS,OAAX;AATW,OAAR,CAAb;AAWA,WAAKnB,QAAL;AACA,WAAKC,QAAL;AACA,WAAKC,MAAL;AACD;;;+BAEU;AACT,WAAKC,GAAL,CAASiB,MAAT,CAAgB,MAAhB,EAAwB,cAAIC,UAA5B;AACA,WAAKlB,GAAL,CAASmB,GAAT,CAAa,aAAb,EAA4B,MAA5B;AACD;;;+BAEU;AACT,WAAKnB,GAAL,CAASC,GAAT,CAAa,mBAASmB,UAAT,EAAb;AACA,WAAKpB,GAAL,CAASC,GAAT,CAAa,mBAASoB,OAAT,EAAb;AACA,WAAKrB,GAAL,CAASC,GAAT,CAAa,uBAAb;AACA,yBAASqB,SAAT;AACD;;;6BAEQ;AACP,UAAMC,SAAS,qBAAe,KAAKvB,GAApB,CAAf;AACAuB,aAAOxB,MAAP;AACD;;;;;;AAGH,IAAMyB,SAAS,IAAI/B,MAAJ,EAAf;AACA+B,OAAOC,KAAP,CAAa,IAAb","file":"main.js","sourcesContent":["import express from 'express';\nimport ejs from 'ejs';\nimport passport from 'passport';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport session from 'express-session';\nimport helmet from 'helmet';\nimport redis from 'connect-redis';\n\nimport httpMiddlewareLog from './log';\nimport logger from './logger';\nimport AppRouting from './routes/routes';\nimport Security from './security/passport';\n// routes\n\nclass Server {\n  constructor() {\n    this.config = this.config.bind(this);\n    this.setup = this.setup.bind(this);\n    this.template = this.template.bind(this);\n    this.security = this.security.bind(this);\n    this.routes = this.routes.bind(this);\n    this.setup();\n  }\n\n  setup() {\n    this.app = express();\n    this.app.use(httpMiddlewareLog);\n    this.config();\n  }\n\n  start(port) {\n    this.app.listen(port, () => {\n      logger.debug('listening on port', port);\n    });\n  }\n\n  config() {\n    this.app.use(bodyParser.json());\n    this.app.use(cookieParser());\n    this.app.use(bodyParser.urlencoded({ extended: false }));\n    const RedisStore = redis(session);\n    this.app.use(session({\n      store: new RedisStore({\n        host: '127.0.0.1',\n        port: 6379,\n      }),\n      secret: 'this_is_session_secret_key',\n      resave: false,\n      rolling: true,\n      saveUninitialized: false,\n      cookie: { expires: 3600000 },\n    }));\n    this.template();\n    this.security();\n    this.routes();\n  }\n\n  template() {\n    this.app.engine('html', ejs.renderFile);\n    this.app.set('view engine', 'html');\n  }\n\n  security() {\n    this.app.use(passport.initialize());\n    this.app.use(passport.session());\n    this.app.use(helmet());\n    Security.configure();\n  }\n\n  routes() {\n    const router = new AppRouting(this.app);\n    router.routes();\n  }\n}\n\nconst server = new Server();\nserver.start(4000);\n"]}